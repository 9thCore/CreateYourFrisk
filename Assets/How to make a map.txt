How to create a map on Unity with Tiled2Unity:

- Create the map on Tiled, and save it
  Tip: Undertale's tiles are 20x20 pixels, with a scale coefficient of 2: I suggest you to 
make a tileset of 40x40px tiles to not be worried about a scale value of 2

- Open Tiled2Unity.exe
- File --> Choose your file .tmx
- Export To --> PathToCYF\Assets\Tiled2Unity\Tiled2Unity.export.txt
- Click the Big Ass Export Button
- Close Tiled2Unity, go on Unity

- Create a scene, delete the Main Camera object then save and name the map (the name will 
  be important!)
- Open the scene Assets\Scenes\test3.unity and copy all the content
- Open your newly created scene and paste this content
- On the Project tab, go to Assets\Tiled2Unity\Prefabs, you should see your map. Click and
  drag it in the scene's arborescence. (Put it in the root, not in a directory)
- Go to Assets\Resources\Prefabs and include Main Camera OW like you did with the previous 
  line. Now you should be able to see something on the Game tab!

- Remove the map in Background, disable the objects Foreground and Bottom
- Move your map to make so the bottom-left corners of the map and the camera are at the 
  same coordinates
- Delete everything that is in the GameObject Background excepted the TPs. You'll see that 
  your map object is composed of every layer that you've added in your map
  Now, you'll have to move into Background the main object component of your map and the 
  colliders (in your object layers) If Unity asks you if you want to break the prefab, say 
  "Yes"
- If there are other layers, Just put them in the root
- Delete the object that contained all the map elements

- Make so Background's RectTransform fits the map. It's very important, as the RectTransform 
  bounds are used for map scrolling
  Tip: Put all of Background's children in the root or as the chile of another object so 
           that their position isn't changed while moving Background.
	   Then, Background's RectTransform size is equal to bounds of the map / 100: if your
           map is 640x480, the size will be 6.4 and 4.8
	   Now center the main map object to make it fit Background's RectTransform
	   Don't forget that Background's RectTransform's bottom-left corner must be at the 
           same coordinates than Main Camera OW's RectTransform's bottom-left corner!
	   And now when everything is right put Background's old children back at their place.
- For each map component, go to the component "Sorting Layer Exposed" and set the value 
  "Order in Layer" to 0
- For each map component, you'll need to set the Z value of the map. The Z value go like 
  this: the greater it is, the further it'll be
  Set Background's Z value to 140, then play around this value to set the Z value of other 
  background layers (between 139 and 141, you can use decimal numbers, of course)
  For foreground layers' Z value, you should take values between -1.5 and -0.5.
  Warning: The maps' Z value must be set to 0 after setting the layers' Z value!
- Edit, add and/or remove the TP objects. You'll have to set some values for the TP: see the 
  component TP Handler.
  Scene Name = Name of the destination scene of the TP
  Position = Position of the player in the destination map, from the bottom-left corner of 
  the map
  Direction = Direction of the player after the TP. 2 = Bottom, 4 = Left, 6 = Right, 8 = Up 
  (I used the NumPad for this, yeah ^^)
  Activated = Boolean used when the TP is launched. don't activate it manually!
- Change the layer of all the colliders: give them the layer BlockingLayer.
  Tip: Select the first one, then shift-click on the last one. Then, you can change the 
      layer off all objects simultaneously!
- Finally, modify the data in the object Background, component Map Infos
  ID = ID of the map. Used in the database to register event states. Must be unique
  Music = Name of the BGM played on the map. The BGM must be in the folder Audio of the mod 
  or the default folder
  Mod To Load = Name of the mod loaded by the map
  Beginning Position = Position of the player in the first map, from the bottom-left corner 
  of the map
- When everything is ready, remove the Main Camera OW object and save the map

Your map is now ready! But it'll not be yet in the Build version... Before testing it, we'll 
need to add it to the Build.
When you're on your newly created map, open File --> Build Settings...
Click on the button "Add Open Scenes": your new map must now be in the list of Scenes in the
Build: it'll be built with the project and it can now be used!

Now is time to test it:

- Open the scene "Assets\Scenes\TransitionOverworld.unity" and search for the GameObject 
  "Main Camera OW"
  Go to the component Transition Overworld and change the values
  First Level To Load: Name of the first scene to load
  First Mod Folder: Name of the mod folder of the first scene to load
- Load the scene Disclaimer.unity and launch the game. Make a new game if you've already 
  saved: you should now be on your map!

Make some tests on the map if there are problems. If there are 0 problem, now you can add 
some events! 
If you had some problems with this tutoriel, please tell me what went wrong
If you see some upgrade that can be done on the tutorial, please tell me too.
You'll have more chances to contact me on Unitale's Discord server: the response will be way
faster and smoother than some messages on reddit
Link of the Discord server: https://discord.gg/0c8fN7KCwBh4ZBL9

I hope that you enjoyed the tutorial, and if you're ready to add an event, check the file 
"How to make an event.txt"!